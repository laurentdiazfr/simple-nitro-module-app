///
/// HybridTest1Spec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridTest1Spec``
public protocol HybridTest1Spec_protocol: HybridObject {
  // Properties
  

  // Methods
  func add(a: Double, b: Double) throws -> Double
}

/// See ``HybridTest1Spec``
open class HybridTest1Spec_base {
  private weak var cxxWrapper: HybridTest1Spec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridTest1Spec_cxx {
  #if DEBUG
    guard self is HybridTest1Spec else {
      fatalError("`self` is not a `HybridTest1Spec`! Did you accidentally inherit from `HybridTest1Spec_base` instead of `HybridTest1Spec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridTest1Spec_cxx(self as! HybridTest1Spec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the Test1 HybridObject.
 * Implement this protocol to create Swift-based instances of Test1.
 * ```swift
 * class HybridTest1 : HybridTest1Spec {
 *   // ...
 * }
 * ```
 */
public typealias HybridTest1Spec = HybridTest1Spec_protocol & HybridTest1Spec_base
