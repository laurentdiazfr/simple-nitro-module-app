///
/// HybridTest2ViewSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridTest2ViewSpec``
public protocol HybridTest2ViewSpec_protocol: HybridObject, HybridView {
  // Properties
  var enableFlash: Bool { get set }

  // Methods
  
}

/// See ``HybridTest2ViewSpec``
open class HybridTest2ViewSpec_base {
  private weak var cxxWrapper: HybridTest2ViewSpec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridTest2ViewSpec_cxx {
  #if DEBUG
    guard self is HybridTest2ViewSpec else {
      fatalError("`self` is not a `HybridTest2ViewSpec`! Did you accidentally inherit from `HybridTest2ViewSpec_base` instead of `HybridTest2ViewSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridTest2ViewSpec_cxx(self as! HybridTest2ViewSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the Test2View HybridObject.
 * Implement this protocol to create Swift-based instances of Test2View.
 * ```swift
 * class HybridTest2View : HybridTest2ViewSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridTest2ViewSpec = HybridTest2ViewSpec_protocol & HybridTest2ViewSpec_base
